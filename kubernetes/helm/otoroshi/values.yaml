
name: otoroshi

replicas: 2
terminationGracePeriodSeconds: 60

global:
  prod: true

serviceAccount:
  name: "otoroshi-admin-user"
  clusterRole: "otoroshi-admin-user"
  clusterRoleBinding: "otoroshi-admin-user"

image:
  name: maif/otoroshi
  tag: 17.5.0-dev
  pullPolicy: IfNotPresent
  https: 8443
  http: 8080

deployment:
  name: otoroshi-deployment
  annotations: {}

service:
  name: otoroshi-service
  apiName: otoroshi-api-service
  https: 8443
  http: 8080

loadbalancer:
  enabled: true
  name: otoroshi-external-service
  https: 443
  http: 80
  nodePort:
    http: 31080
    https: 31443

env:
  storageRoot: otoroshi
  password: password
  domain: "oto.tools"
  clientId: "admin-api-apikey-id"
  clientSecret: "admin-api-apikey-secret"
  secret: "verysecretvaluethatyoumustoverwrite"
  redisURL: "redis://otorosi-redis-master:6379"

resources:
  requests:
    cpu: "2"
    memory: "2Gi"
  limits:
    cpu: "4"
    memory: "4Gi"

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1
    maxSurge: 1

probes:
  readiness:
    failureThreshold: 1          
    initialDelaySeconds: 60
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 2
  liveness:  
    failureThreshold: 3
    initialDelaySeconds: 60
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 2

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 80
  - type: Resource
    resource:
      name: memory
      targetAverageUtilization: 80

# This block overrides values for the bitnami/redis chart dependency
# For the full set of configurable options, see:
# https://github.com/bitnami/charts/blob/main/bitnami/redis/values.yaml

redis:
  ## @param cluster.enabled Deploy Redis in cluster mode (master + slaves)
  cluster:
    enabled: false
  ## @param sentinel.enabled Enable Redis Sentinel support
  sentinel:
    enabled: false
    ## @param sentinel.usePassword Require password authentication on Sentinel instances
    usePassword: false
  ## @param usePassword Enable Redis AUTH for master and slaves
  usePassword: false
  ## @param auth.enabled Enable password authentication for RedisÂ® (newer chart versions)
  auth:
    enabled: false
  master:
    persistence:
      ## @param master.persistence.enabled Enable persistence on Redis(R) master nodes using Persistent Volume Claims
      enabled: true
      ## @param master.persistence.storageClass Persistent Volume storage class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
      storageClass: ""
      ## @param master.persistence.accessModes Persistent Volume access modes
      accessModes:
        - ReadWriteOnce
      ## @param master.persistence.size Persistent Volume size
      size: 8Gi
      ## @param master.persistence.existingClaim Use an existing PVC which must be created manually before being bound
      ## NOTE: Requires master.persistence.enabled: true
      existingClaim: ""
  replica:
    persistence:
      ## @param replica.persistence.enabled Enable persistence on Redis(R) replica nodes using Persistent Volume Claims
      enabled: true
      ## @param replica.persistence.storageClass Persistent Volume storage class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is set, choosing the default provisioner
      storageClass: ""
      ## @param replica.persistence.accessModes Persistent Volume access modes
      accessModes:
        - ReadWriteOnce
      ## @param replica.persistence.size Persistent Volume size
      size: 8Gi
      ## @param replica.persistence.existingClaim Use an existing PVC which must be created manually before being bound
      ## NOTE: Requires replica.persistence.enabled: true

webhooks:
  validation: true
  sidecarInject: false


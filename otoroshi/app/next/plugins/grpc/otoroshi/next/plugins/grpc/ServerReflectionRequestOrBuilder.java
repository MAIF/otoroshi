// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: reflection.proto

package otoroshi.next.plugins.grpc;

public interface ServerReflectionRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:grpc.reflection.v1alpha.ServerReflectionRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string host = 1;</code>
   * @return The host.
   */
  java.lang.String getHost();
  /**
   * <code>string host = 1;</code>
   * @return The bytes for host.
   */
  com.google.protobuf.ByteString
      getHostBytes();

  /**
   * <pre>
   * Find a proto file by the file name.
   * </pre>
   *
   * <code>string file_by_filename = 3;</code>
   * @return Whether the fileByFilename field is set.
   */
  boolean hasFileByFilename();
  /**
   * <pre>
   * Find a proto file by the file name.
   * </pre>
   *
   * <code>string file_by_filename = 3;</code>
   * @return The fileByFilename.
   */
  java.lang.String getFileByFilename();
  /**
   * <pre>
   * Find a proto file by the file name.
   * </pre>
   *
   * <code>string file_by_filename = 3;</code>
   * @return The bytes for fileByFilename.
   */
  com.google.protobuf.ByteString
      getFileByFilenameBytes();

  /**
   * <pre>
   * Find the proto file that declares the given fully-qualified symbol name.
   * This field should be a fully-qualified symbol name
   * (e.g. &lt;package&gt;.&lt;service&gt;[.&lt;method&gt;] or &lt;package&gt;.&lt;type&gt;).
   * </pre>
   *
   * <code>string file_containing_symbol = 4;</code>
   * @return Whether the fileContainingSymbol field is set.
   */
  boolean hasFileContainingSymbol();
  /**
   * <pre>
   * Find the proto file that declares the given fully-qualified symbol name.
   * This field should be a fully-qualified symbol name
   * (e.g. &lt;package&gt;.&lt;service&gt;[.&lt;method&gt;] or &lt;package&gt;.&lt;type&gt;).
   * </pre>
   *
   * <code>string file_containing_symbol = 4;</code>
   * @return The fileContainingSymbol.
   */
  java.lang.String getFileContainingSymbol();
  /**
   * <pre>
   * Find the proto file that declares the given fully-qualified symbol name.
   * This field should be a fully-qualified symbol name
   * (e.g. &lt;package&gt;.&lt;service&gt;[.&lt;method&gt;] or &lt;package&gt;.&lt;type&gt;).
   * </pre>
   *
   * <code>string file_containing_symbol = 4;</code>
   * @return The bytes for fileContainingSymbol.
   */
  com.google.protobuf.ByteString
      getFileContainingSymbolBytes();

  /**
   * <pre>
   * Find the proto file which defines an extension extending the given
   * message type with the given field number.
   * </pre>
   *
   * <code>.grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5;</code>
   * @return Whether the fileContainingExtension field is set.
   */
  boolean hasFileContainingExtension();
  /**
   * <pre>
   * Find the proto file which defines an extension extending the given
   * message type with the given field number.
   * </pre>
   *
   * <code>.grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5;</code>
   * @return The fileContainingExtension.
   */
  otoroshi.next.plugins.grpc.ExtensionRequest getFileContainingExtension();
  /**
   * <pre>
   * Find the proto file which defines an extension extending the given
   * message type with the given field number.
   * </pre>
   *
   * <code>.grpc.reflection.v1alpha.ExtensionRequest file_containing_extension = 5;</code>
   */
  otoroshi.next.plugins.grpc.ExtensionRequestOrBuilder getFileContainingExtensionOrBuilder();

  /**
   * <pre>
   * Finds the tag numbers used by all known extensions of extendee_type, and
   * appends them to ExtensionNumberResponse in an undefined order.
   * Its corresponding method is best-effort: it's not guaranteed that the
   * reflection service will implement this method, and it's not guaranteed
   * that this method will provide all extensions. Returns
   * StatusCode::UNIMPLEMENTED if it's not implemented.
   * This field should be a fully-qualified type name. The format is
   * &lt;package&gt;.&lt;type&gt;
   * </pre>
   *
   * <code>string all_extension_numbers_of_type = 6;</code>
   * @return Whether the allExtensionNumbersOfType field is set.
   */
  boolean hasAllExtensionNumbersOfType();
  /**
   * <pre>
   * Finds the tag numbers used by all known extensions of extendee_type, and
   * appends them to ExtensionNumberResponse in an undefined order.
   * Its corresponding method is best-effort: it's not guaranteed that the
   * reflection service will implement this method, and it's not guaranteed
   * that this method will provide all extensions. Returns
   * StatusCode::UNIMPLEMENTED if it's not implemented.
   * This field should be a fully-qualified type name. The format is
   * &lt;package&gt;.&lt;type&gt;
   * </pre>
   *
   * <code>string all_extension_numbers_of_type = 6;</code>
   * @return The allExtensionNumbersOfType.
   */
  java.lang.String getAllExtensionNumbersOfType();
  /**
   * <pre>
   * Finds the tag numbers used by all known extensions of extendee_type, and
   * appends them to ExtensionNumberResponse in an undefined order.
   * Its corresponding method is best-effort: it's not guaranteed that the
   * reflection service will implement this method, and it's not guaranteed
   * that this method will provide all extensions. Returns
   * StatusCode::UNIMPLEMENTED if it's not implemented.
   * This field should be a fully-qualified type name. The format is
   * &lt;package&gt;.&lt;type&gt;
   * </pre>
   *
   * <code>string all_extension_numbers_of_type = 6;</code>
   * @return The bytes for allExtensionNumbersOfType.
   */
  com.google.protobuf.ByteString
      getAllExtensionNumbersOfTypeBytes();

  /**
   * <pre>
   * List the full names of registered services. The content will not be
   * checked.
   * </pre>
   *
   * <code>string list_services = 7;</code>
   * @return Whether the listServices field is set.
   */
  boolean hasListServices();
  /**
   * <pre>
   * List the full names of registered services. The content will not be
   * checked.
   * </pre>
   *
   * <code>string list_services = 7;</code>
   * @return The listServices.
   */
  java.lang.String getListServices();
  /**
   * <pre>
   * List the full names of registered services. The content will not be
   * checked.
   * </pre>
   *
   * <code>string list_services = 7;</code>
   * @return The bytes for listServices.
   */
  com.google.protobuf.ByteString
      getListServicesBytes();

  public otoroshi.next.plugins.grpc.ServerReflectionRequest.MessageRequestCase getMessageRequestCase();
}
